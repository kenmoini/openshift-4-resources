"OCPFourPolicy": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": { "Service": [ "ec2.amazonaws.com" ] },
              "Action": [ "sts:AssumeRole" ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "ocpfour-describe",
            "PolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                     "ec2:AllocateAddress",
                     "ec2:AssociateAddress",
                     "ec2:AssociateDhcpOptions",
                     "ec2:AssociateRouteTable",
                     "ec2:AttachInternetGateway",
                     "ec2:AuthorizeSecurityGroupEgress",
                     "ec2:AuthorizeSecurityGroupIngress",
                     "ec2:CopyImage",
                     "ec2:CreateDhcpOptions",
                     "ec2:CreateInternetGateway",
                     "ec2:CreateNatGateway",
                     "ec2:CreateRoute",
                     "ec2:CreateRouteTable",
                     "ec2:CreateSecurityGroup",
                     "ec2:CreateSubnet",
                     "ec2:CreateTags",
                     "ec2:CreateVpc",
                     "ec2:CreateVpcEndpoint",
                     "ec2:CreateVolume",
                     "ec2:DescribeAccountAttributes",
                     "ec2:DescribeAddresses",
                     "ec2:DescribeAvailabilityZones",
                     "ec2:DescribeDhcpOptions",
                     "ec2:DescribeImages",
                     "ec2:DescribeInstanceAttribute",
                     "ec2:DescribeInstanceCreditSpecifications",
                     "ec2:DescribeInstances",
                     "ec2:DescribeInternetGateways",
                     "ec2:DescribeKeyPairs",
                     "ec2:DescribeNatGateways",
                     "ec2:DescribeNetworkAcls",
                     "ec2:DescribePrefixLists",
                     "ec2:DescribeRegions",
                     "ec2:DescribeRouteTables",
                     "ec2:DescribeSecurityGroups",
                     "ec2:DescribeSubnets",
                     "ec2:DescribeTags",
                     "ec2:DescribeVpcEndpoints",
                     "ec2:DescribeVpcs",
                     "ec2:DescribeVpcAttribute",
                     "ec2:DescribeVolumes",
                     "ec2:DescribeVpcClassicLink",
                     "ec2:DescribeVpcClassicLinkDnsSupport",
                     "ec2:ModifyInstanceAttribute",
                     "ec2:ModifySubnetAttribute",
                     "ec2:ModifyVpcAttribute",
                     "ec2:RevokeSecurityGroupEgress",
                     "ec2:RunInstances",
                     "ec2:TerminateInstances",
                     "ec2:RevokeSecurityGroupIngress",
                     "ec2:ReplaceRouteTableAssociation",
                     "ec2:DescribeNetworkInterfaces",
                     "ec2:ModifyNetworkInterfaceAttribute",
                     "elasticloadbalancing:AddTags",
                     "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
                     "elasticloadbalancing:AttachLoadBalancerToSubnets",
                     "elasticloadbalancing:CreateListener",
                     "elasticloadbalancing:CreateLoadBalancer",
                     "elasticloadbalancing:CreateLoadBalancerListeners",
                     "elasticloadbalancing:CreateTargetGroup",
                     "elasticloadbalancing:ConfigureHealthCheck",
                     "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                     "elasticloadbalancing:DeregisterTargets",
                     "elasticloadbalancing:DescribeInstanceHealth",
                     "elasticloadbalancing:DescribeListeners",
                     "elasticloadbalancing:DescribeLoadBalancers",
                     "elasticloadbalancing:DescribeLoadBalancerAttributes",
                     "elasticloadbalancing:DescribeTags",
                     "elasticloadbalancing:DescribeTargetGroupAttributes",
                     "elasticloadbalancing:DescribeTargetHealth",
                     "elasticloadbalancing:ModifyLoadBalancerAttributes",
                     "elasticloadbalancing:ModifyTargetGroup",
                     "elasticloadbalancing:ModifyTargetGroupAttributes",
                     "elasticloadbalancing:RegisterTargets",
                     "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                     "elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
                     "iam:AddRoleToInstanceProfile",
                     "iam:CreateInstanceProfile",
                     "iam:CreateRole",
                     "iam:DeleteInstanceProfile",
                     "iam:DeleteRole",
                     "iam:DeleteRolePolicy",
                     "iam:GetInstanceProfile",
                     "iam:GetRole",
                     "iam:GetRolePolicy",
                     "iam:GetUser",
                     "iam:ListInstanceProfilesForRole",
                     "iam:ListRoles",
                     "iam:ListUsers",
                     "iam:PassRole",
                     "iam:PutRolePolicy",
                     "iam:RemoveRoleFromInstanceProfile",
                     "iam:SimulatePrincipalPolicy",
                     "iam:TagRole",
                     "route53:ChangeResourceRecordSets",
                     "route53:ChangeTagsForResource",
                     "route53:GetChange",
                     "route53:GetHostedZone",
                     "route53:CreateHostedZone",
                     "route53:ListHostedZones",
                     "route53:ListHostedZonesByName",
                     "route53:ListResourceRecordSets",
                     "route53:ListTagsForResource",
                     "route53:UpdateHostedZoneComment",
                     "s3:CreateBucket",
                     "s3:DeleteBucket",
                     "s3:GetAccelerateConfiguration",
                     "s3:GetBucketCors",
                     "s3:GetBucketLocation",
                     "s3:GetBucketLogging",
                     "s3:GetBucketObjectLockConfiguration",
                     "s3:GetBucketReplication",
                     "s3:GetBucketRequestPayment",
                     "s3:GetBucketTagging",
                     "s3:GetBucketVersioning",
                     "s3:GetBucketWebsite",
                     "s3:GetEncryptionConfiguration",
                     "s3:GetLifecycleConfiguration",
                     "s3:GetReplicationConfiguration",
                     "s3:ListBucket",
                     "s3:PutBucketAcl",
                     "s3:PutBucketTagging",
                     "s3:PutEncryptionConfiguration",
                     "s3:PutObject",
                     "s3:PutObjectAcl",
                     "s3:PutObjectTagging",
                     "s3:GetObject",
                     "s3:GetObjectAcl",
                     "s3:GetObjectTagging",
                     "s3:GetObjectVersion",
                     "s3:DeleteObject",
                     "autoscaling:DescribeAutoScalingGroups",
                     "ec2:DeleteDhcpOptions",
                     "ec2:DeleteInternetGateway",
                     "ec2:DeleteNatGateway",
                     "ec2:DeleteNetworkInterface",
                     "ec2:DeleteRoute",
                     "ec2:DeleteRouteTable",
                     "ec2:DeleteSnapshot",
                     "ec2:DeleteSecurityGroup",
                     "ec2:DeleteSubnet",
                     "ec2:DeleteVolume",
                     "ec2:DeleteVpc",
                     "ec2:DeleteVpcEndpoints",
                     "ec2:DeregisterImage",
                     "ec2:DetachInternetGateway",
                     "ec2:DisassociateRouteTable",
                     "ec2:ReleaseAddress",
                     "elasticloadbalancing:DescribeTargetGroups",
                     "elasticloadbalancing:DeleteTargetGroup",
                     "elasticloadbalancing:DeleteLoadBalancer",
                     "iam:ListInstanceProfiles",
                     "iam:ListRolePolicies",
                     "iam:ListUserPolicies",
                     "route53:DeleteHostedZone",
                     "tag:GetResources",
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "NodeInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "DependsOn": "OCPFourPolicy",
      "Properties": {
        "Roles": [ { "Ref": "OCPFourPolicy" } ]
      }
    },
